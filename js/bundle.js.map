{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,GAAG;AAC3D;AACA;AACA;AACoB;;;;;;;;;;;;;;;;ACVa;AACjC;AACA;AACA,IAAI,gDAAW;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,QAAQ,sBAAsB,UAAU;AACpG;AACA;AACA,mDAAmD,QAAQ;AAC3D,mDAAmD,QAAQ;AAC3D,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA,iEAAe,2BAA2B;;;;;;;;;;;;;;;;ACxBV;AACH;AACA;AAC7B;AACA;AACA,IAAI,+CAAU;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,oBAAoB;AACzE;AACA,YAAY,4CAAI;AAChB,YAAY,4CAAI;AAChB,YAAY,4CAAI;AAChB;AACA;AACA;AACA,0DAA0D,GAAG;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,gBAAgB,4CAAI;AACpB;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,oBAAoB,4CAAI;AACxB;AACA;AACA;AACA;AACA;AACA,uCAAuC,KAAK;AAC5C,iBAAiB;AACjB;AACA;AACA,0CAA0C,iBAAiB;AAC3D,mCAAmC;AACnC;AACA;AACA,gEAAgE,SAAS;AACzE;AACA;AACA;AACA,gBAAgB,4CAAI;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB,oBAAoB,4CAAI;AACxB,oBAAoB,4CAAI;AACxB;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,iEAAe,+BAA+B;;;;;;;;;;;;;;;ACzF9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACc;;;;;;;;;;;;;;;;ACVkB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,+CAAU;AACd;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,MAAM,IAAI,UAAU;AAC9C;AACA,aAAa;AACb;AACA;AACA;AACA,2BAA2B,GAAG;AAC9B;AACA,SAAS;AACT;AACA;AACA,iEAAe,8BAA8B;;;;;;UCzB7C;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;ACNa;AACgD;AACM;AACE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,6DAA2B;AACnC;AACA;AACA;AACA,QAAQ,gEAA8B;AACtC;AACA;AACA;AACA,QAAQ,iEAA+B;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iB","sources":["webpack://words-learning/./js/modules/db.js","webpack://words-learning/./js/modules/homePage.js","webpack://words-learning/./js/modules/trainingPage.js","webpack://words-learning/./js/modules/utils.js","webpack://words-learning/./js/modules/wordSetPage.js","webpack://words-learning/webpack/bootstrap","webpack://words-learning/webpack/runtime/define property getters","webpack://words-learning/webpack/runtime/hasOwnProperty shorthand","webpack://words-learning/webpack/runtime/make namespace object","webpack://words-learning/./js/router.js"],"sourcesContent":["function getWordSets() {\r\n    return axios.get('http://localhost:8080/word-sets/')\r\n        .then(data => data.data);\r\n}\r\n\r\nfunction getWordSet(id) {\r\n    return axios.get(`http://localhost:8080/word-sets/${id}/`)\r\n        .then(data => data.data);\r\n}\r\n\r\nexport {getWordSet};\r\nexport {getWordSets};","import {getWordSets} from './db';\r\n\r\nfunction addDynamicContentToHomePage(routes) {\r\n    getWordSets()\r\n        .then(data => {\r\n            let wordSets = data;\r\n\r\n            const wordSetsMenu = document.querySelector('.word-set-list');\r\n            let wordSetListHtml = '';\r\n\r\n            wordSets.forEach(item => {\r\n                wordSetListHtml += `\r\n                    <li>   \r\n                        <a href=\"/words-learning/word-set/${item.id}\" onclick=\"route()\">${item.name}</a>\r\n                    </li>\r\n                `;\r\n                routes[`/words-learning/word-set/${item.id}`] = '/words-learning/pages/word-set.html';\r\n                routes[`/words-learning/word-set/${item.id}/training`] = '/words-learning/pages/training.html';\r\n            });\r\n\r\n            wordSetsMenu.innerHTML = wordSetListHtml;\r\n        });\r\n}\r\n\r\nexport default addDynamicContentToHomePage;","import {getWordSet} from './db';\r\nimport {hide} from './utils';\r\nimport {show} from './utils';\r\n\r\nfunction addDynamicContentToTrainingPage(id) {\r\n    getWordSet(id)\r\n        .then(data => {\r\n            let currentWordSet = data;\r\n            const trainingTitle = document.querySelector('.training-title'),\r\n                result = document.querySelector('.result'),\r\n                resultText = document.querySelector('.result-text'),\r\n                previousWord = document.querySelector('.previous-word'),\r\n                previousWordContent = document.querySelector('.previous-word-content'),\r\n                training = document.querySelector('.training'),\r\n                wordInput = document.querySelector('#word-input'),\r\n                wordLabel = document.querySelector('#word-label'),\r\n                trainingForm = document.querySelector('#training-form'),\r\n                hint = document.querySelector('#hint'),\r\n                trainingEnd = document.querySelector('.training-end'),\r\n                trainAgain = document.querySelector('#train-again');\r\n            trainingTitle.textContent = `Training \"${currentWordSet.name}\"`;\r\n\r\n            hide(result);\r\n            hide(previousWord);\r\n            hide(trainingEnd);\r\n\r\n\r\n\r\n            trainAgain.href = `/words-learning/word-set/${id}/training`;\r\n\r\n            let words = currentWordSet.words;\r\n            words = words.sort((a, b) => 0.5 - Math.random());\r\n            console.log(words);\r\n            let currentIndex = 0;\r\n\r\n            let word = words[0];\r\n\r\n            wordLabel.textContent = word.translation;\r\n\r\n            hint.addEventListener('click', (e) => {\r\n                e.preventDefault();\r\n                alert(word.name);\r\n            });\r\n\r\n            trainingForm.addEventListener('submit', (e) => {\r\n                e.preventDefault();\r\n                show(result);\r\n\r\n                if (wordInput.value === word.name) {\r\n                    resultText.textContent = 'Right!';\r\n                    resultText.classList.add('result-right');\r\n                    resultText.classList.remove('result-wrong');\r\n                } else {\r\n                    resultText.textContent = 'Wrong';\r\n                    resultText.classList.remove('result-right');\r\n                    resultText.classList.add('result-wrong');\r\n                    hide(previousWord);\r\n                    return;\r\n                }\r\n\r\n                let examples = '';\r\n                word.examples.forEach(item => {\r\n                    examples += `<br>${item}`;\r\n                });\r\n\r\n                let previousWordHtml = `\r\n                    <b>translation:</b> ${word.translation}<br>\r\n                    <b>name:</b> ${word.name}\r\n                `;\r\n                if (examples != '') {\r\n                    previousWordHtml += `<br><b>examples:</b> ${examples}`;\r\n                }\r\n                previousWordContent.innerHTML = previousWordHtml;\r\n\r\n                show(previousWord);\r\n\r\n                if (currentIndex < words.length - 1) {\r\n                    currentIndex++;\r\n                    word = words[currentIndex];\r\n                    wordInput.value = '';\r\n                    wordLabel.textContent = word.translation;\r\n                } else {\r\n                    hide(training);\r\n                    show(trainingEnd);\r\n                }\r\n            });\r\n        });\r\n}\r\n\r\nexport default addDynamicContentToTrainingPage;","function hide(element) {\r\n    element.classList.add('hide');\r\n    element.classList.remove('show');\r\n}\r\n\r\nfunction show(element) {\r\n    element.classList.remove('hide');\r\n    element.classList.add('show');\r\n}\r\n\r\nexport {hide};\r\nexport{show};","import {getWordSet} from './db';\r\n\r\nfunction addDynamicContentToWordSetPage(id) {\r\n    const wordSetTitle = document.querySelector('.word-set-title'),\r\n          words = document.querySelector('.words'),\r\n          training = document.querySelector('.training-button');\r\n\r\n    getWordSet(id)\r\n        .then(data => {\r\n            let currentWordSet = data;\r\n            wordSetTitle.textContent = currentWordSet.name;\r\n            let wordsHtml = '';\r\n            currentWordSet.words.forEach((word, i) => {\r\n                wordsHtml += `\r\n                    <li>${i + 1}. ${word.name}</li>\r\n                `;\r\n            });\r\n            words.innerHTML = wordsHtml;\r\n\r\n            training.innerHTML = `\r\n                <a href=\"${id}/training\" onclick=\"route()\">Training</a></div>\r\n            `;\r\n        });\r\n}\r\n\r\nexport default addDynamicContentToWordSetPage;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","'use strict';\r\nimport addDynamicContentToHomePage from './modules/homePage';\r\nimport addDynamicContentToWordSetPage from './modules/wordSetPage';\r\nimport addDynamicContentToTrainingPage from './modules/trainingPage';\r\n\r\nconst routes = {\r\n    404: \"/words-learning/pages/404.html\",\r\n    \"/words-learning/\": \"/words-learning/pages/index.html\"\r\n};\r\n\r\nconst route = (event) => {\r\n    event = event || window.event;\r\n    event.preventDefault();\r\n    window.history.pushState({}, \"\", event.target.href);\r\n    handleLocation();\r\n};\r\n\r\nconst handleLocation = async () => {\r\n    const path = window.location.pathname;\r\n    const route = routes[path] || routes[404];\r\n    const html = await axios.get(route).then((data) => data.data);\r\n    document.getElementById(\"main-page\").innerHTML = html;\r\n\r\n    if (path === \"/words-learning/\") {\r\n        addDynamicContentToHomePage(routes);\r\n    }\r\n\r\n    if (path.replace(/\\d/g, '') === '/words-learning/word-set/') {\r\n        addDynamicContentToWordSetPage(+path.replace(/\\D/g, ''));\r\n    }\r\n\r\n    if (path.replace(/\\d/g, '') === '/words-learning/word-set//training') {\r\n        addDynamicContentToTrainingPage(+path.replace(/\\D/g, ''));\r\n    }\r\n};\r\n\r\nwindow.onpopstate = handleLocation;\r\nwindow.route = route;\r\n\r\n\r\nhandleLocation();"],"names":[],"sourceRoot":""}